@define-mixin .color-variant $bg-color: #555, $lt-percent: 10%, $lter-percent: 15%, $dk-percent: 10%, $dker-percent: 15% {
    background-color: $bg-color;
    &.lt,
    .lt {
        @mixin .color-schema $bg-color, -$lt-percent, -2.5%;
    }
    &.lter,
    .lter {
        @mixin .color-schema $bg-color, -$lter-percent, -5%;
    }
    &.dk,
    .dk {
        @mixin .color-schema $bg-color, $dk-percent, 2.5%;
    }
    &.dker,
    .dker {
        @mixin .color-schema $bg-color, $dker-percent, 5%;
    }
  &.bg,
  .bg{
    background-color: $bg-color;
  }
}


@define-mixin .color-schema $bg-color: #555, $percent: 15%, $sat-percent{
  background-color: color($bg-color lightness(-$percent));
}

@define-mixin .font-variant $bg-color {
  $font-color:  color($bg-color lightness(+40%) saturation(-10%));
  $link-color:  color($bg-color lightness(+50%) saturation(-10%));
  $hover-color: #fff;
  color: $font-color;
  & a {
      color: $link-color;
      &:hover{
          color: $hover-color;
      }
      &.list-group-item{
          &:hover,
          &:focus{
              background-color: inherit;
          }
      }
  }
  & .nav {
    & > li {
      &:hover,
      &:focus,
      &.active{
        & > a{
          color: $hover-color;
          @mixin .color-schema $bg-color, 5%, 2.5%;
        }
      }
      & > a{
        color: color($link-color lightness(-5%));
        &:hover,
        &:focus{
          @mixin .color-schema $bg-color, 3%, 2.5%;
        }
      }
    }
    & .open > a{
      @mixin .color-schema $bg-color, 5%, 2.5%;
    }
  }
  & .caret{
    border-top-color: $font-color;
    border-bottom-color: $font-color;
  }
  &.navbar .nav{
    > li.active > a{
      color: $hover-color;
      @mixin .color-schema $bg-color, 5%, 2.5%;
    }
  }
  & .open > a {
    &,
    &:hover,
    &:focus{
      color: $hover-color;
    }
  }
  & .text-muted {
    color: color($font-color lightness(-10%)) !important;
    }
  & .text-lt {
    color: color($font-color lightness(+25%)) !important;
  }
  &.auto,
  & .auto{
    & .list-group-item{
      border-color: color($bg-color lightness(-5%)) !important;
      background-color: transparent;
      &:hover,
      &:focus,
      &:active,
      &.active{
        @mixin .color-schema $bg-color, 5%, 2.5% !important;
      }
    }
  }
}

@define-mixin .text-wariant $bg-color, $name{
  a.bg-$(name):hover{
    background-color: color($bg-color lightness(-5%));
  }
  a.text-$(name):hover{
    color: color($bg-color  lightness(-5%));
  }
  .text-$(name){
    color: $bg-color;
  }
  .text-$(name)-lt{
    color: color($bg-color lightness(+5%));
  }
  .text-$(name)-lter{
    color: color($bg-color lightness(+10%));
  }
  .text-$(name)-dk{
    color: color($bg-color lightness(-5%));
  }
  .text-$(name)-dker{
    color: color($bg-color lightness(-10%));
  }
}

@define-mixin .clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*Button variants*/
@define-mixin .button-variant $color, $background, $border{
  color: $color !important;
  background-color: color($background);
  border-color: $border;

  /*.open .dropdown-toggle&,*/
  &:hover,
  &:focus,
  &:active,
  &.active {
    color: $color !important;
    background-color: color($background lightness(-5%));
    border-color: color($border lightness(-8%));
  }
}

@define-mixin .translateZ $z {
      transform: translateZ($z);
}

/*CSS3 PROPERTIES*/
@define-mixin .border-top-radius $radius {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}
@define-mixin .border-right-radius $radius {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}
@define-mixin .border-bottom-radius $radius {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}
@define-mixin .border-left-radius $radius {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}

/*Drop shadows*/
@define-mixin .box-shadow $shadow {
  box-shadow: $shadow;
}

/*Transitions*/
@define-mixin .transition $transition {
          transition: $transition;
}
@define-mixin .transition-delay $transition-delay {
          transition-delay: $transition-delay;
}
@define-mixin .transition-duration $transition-duration {
          transition-duration: $transition-duration;
}
@define-mixin .transition-transform $transition {
          transition: transform $transition;
}

/*Transformations*/
@define-mixin .rotate $degrees {
          transform: rotate($degrees);
}
@define-mixin .scale $ratio {
          transform: scale($ratio);
}
@define-mixin .translate $x, $y {
          transform: translate($x, $y);
}
@define-mixin .skew $x, $y  {
          transform: skew($x, $y);
}
@define-mixin .translate3d $x, $y, $z {
          transform: translate3d($x, $y, $z);
}

/*Backface visibility
Prevent browsers from flickering when using CSS 3D transforms.
Default value is `visible`, but can be changed to `hidden`
See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples*/
@define-mixin .backface-visibility $visibility{
          backface-visibility: $visibility;
}

/*Box sizing*/
@define-mixin .box-sizing $boxmodel {
          box-sizing: $boxmodel;
}

/*User select*/
/*For selecting text on the page*/
@define-mixin .user-select $select {
          user-select: $select;
}

/*Resize anything*/
/*Options: horizontal, vertical, both*/
@define-mixin .resizable $direction {
  resize: $direction; 
  /*Safari fix*/
  overflow: auto;
}


/*CSS3 Content Columns*/
@define-mixin .content-columns $column-count, $column-gap: $grid-gutter-width {
          column-count: $column-count;
          column-gap: $column-gap;
}

/*Optional hyphenation*/
@define-mixin .hyphens $mode: auto {
  word-wrap: break-word;
          hyphens: $mode;
}

/*Opacity*/
@define-mixin .opacity $opacity {
  opacity: $opacity;
}


/*GRADIENTS*/
/*--------------------------------------------------*/

/*#gradient {*/

  /*Horizontal gradient, from left to right*/
  /*Creates two color stops, start and end, by specifying a color and position for each color stop.*/
  /*Color stops are not available in IE9 and below.*/
  @define-mixin .horizontal $start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100% {
    background-image: -webkit-gradient(linear, $start-percent top, $end-percent top, from($start-color), to($end-color)); /*Safari 4+, Chrome 2+*/
    background-image: -webkit-linear-gradient(left, color-stop($start-color $start-percent), color-stop($end-color $end-percent)); /* Safari 5.1+, Chrome 10+*/
    background-image: -moz-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); /*FF 3.6+*/
    background-image:  linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); /*Standard, IE10*/
    background-repeat: repeat-x;
    /*IE9 and down*/
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb($start-color),argb($end-color)));
  }

  /*Vertical gradient, from top to bottom*/
  /*Creates two color stops, start and end, by specifying a color and position for each color stop.*/
  /*Color stops are not available in IE9 and below.*/
  @define-mixin .vertical $start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100% {
    background-image: -webkit-gradient(linear, left $start-percent, left $end-percent, from($start-color), to($end-color)); /*Safari 4+, Chrome 2+*/
    background-image: -webkit-linear-gradient(top, $start-color, $start-percent, $end-color, $end-percent); /*Safari 5.1+, Chrome 10+*/
    background-image:  -moz-linear-gradient(top, $start-color $start-percent, $end-color $end-percent); /*FF 3.6+*/
    background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); /*Standard, IE10*/
    background-repeat: repeat-x;
    /*IE9 and down*/
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb($start-color),argb($end-color)));
  }

  @define-mixin .directional $start-color: #555, $end-color: #333, $deg: 45deg {
    background-repeat: repeat-x;
    background-image: -webkit-linear-gradient($deg, $start-color, $end-color); /*Safari 5.1+, Chrome 10+*/
    background-image: -moz-linear-gradient($deg, $start-color, $end-color); /*FF 3.6+*/
    /*Standard, IE10*/
    background-image: linear-gradient($deg, $start-color, $end-color);
  }
  @define-mixin .horizontal-three-colors $start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f {
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from($start-color), color-stop($color-stop, $mid-color), to($end-color));
    background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
    background-image: -moz-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
    background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
    background-repeat: no-repeat;
    /*IE9 and down, gets no color-stop at all for proper fallback*/
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb($start-color),argb($end-color)));
  }
  @define-mixin .vertical-three-colors $start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f {
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($start-color), color-stop($color-stop, $mid-color), to($end-color));
    background-image: -webkit-linear-gradient($start-color, $mid-color $color-stop, $end-color);
    background-image: -moz-linear-gradient(top, $start-color, $mid-color $color-stop, $end-color);
    background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
    background-repeat: no-repeat;
    /*IE9 and down, gets no color-stop at all for proper fallback*/
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb($start-color),argb($end-color)));
  }
  @define-mixin .radial $inner-color: #555, $outer-color: #333 {
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($inner-color), to($outer-color));
    background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
    background-image: -moz-radial-gradient(circle, $inner-color, $outer-color);
    background-image: radial-gradient(circle, $inner-color, $outer-color);
    background-repeat: no-repeat;
  }
  @define-mixin .striped $color: #555, $angle: 45deg {
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  }
/*}*/

/*Reset filters for IE*/
/*When you need to remove a gradient background, dont forget to use this to reset*/
/*the IE filter for IE9 and below.*/
@define-mixin .reset-filter {
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}
